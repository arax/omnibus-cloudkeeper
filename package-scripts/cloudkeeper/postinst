#!/bin/bash
#
# Perform necessary cloudkeeper setup steps
# after package is installed.
#

PROGNAME=$(basename $0)
INSTALLER_DIR=`dirname $0`

DEST_DIR="/opt/cloudkeeper"
CONFIG_DIR="/etc/cloudkeeper"
SPOOL_DIR="/var/spool/cloudkeeper"
SYSD_DIR="/etc/systemd/system"
BIN_DIR="/usr/bin"

EMB_SYSD_DIR="${DEST_DIR}/examples/systemd"

CLOUDKEEPER_CONFIG_FILE="$CONFIG_DIR/cloudkeeper.yml"
CLOUDKEEPER_CONFIG_FILE_MOD="440"
CLOUDKEEPER_IMAGES_DIR="$SPOOL_DIR/images/"

RUBY_VERSION="2.4.0"
CLOUDKEEPER_VERSION="1.6.0"

EMBEDDED_GEM_ROOT="$DEST_DIR/embedded/lib/ruby/gems/$RUBY_VERSION/gems/cloudkeeper-$CLOUDKEEPER_VERSION"
EMBEDDED_NGINX_BIN="$DEST_DIR/embedded/sbin/nginx"

function error_exit
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

# chown
chown -R root:root "$DEST_DIR" || error_exit "Cannot chown $DEST_DIR to root:root"

# create the cloudkeeper user
id -u cloudkeeper > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  useradd --system --shell /bin/false --home "$SPOOL_DIR" --create-home cloudkeeper || error_exit "Cannot create the cloudkeeper user account"
  usermod -L cloudkeeper || error_exit "Cannot lock the cloudkeeper user account"
fi

# prepare runtime dirs
mkdir -p "$CLOUDKEEPER_IMAGES_DIR" || error_exit "Cannot create $CLOUDKEEPER_IMAGES_DIR"
chown -R cloudkeeper:cloudkeeper "$SPOOL_DIR" || error_exit "Cannot chown $SPOOL_DIR to cloudkeeper:cloudkeeper"

# prepare configuration dir
mkdir -p "$CONFIG_DIR" || error_exit "Cannot create $CONFIG_DIR"
chown root:root "$CONFIG_DIR" || error_exit "Cannot chown $CONFIG_DIR to root:root"

if [ -f "$CLOUDKEEPER_CONFIG_FILE" ]; then
  CLOUDKEEPER_CONFIG_FILE="$CLOUDKEEPER_CONFIG_FILE.new"
fi

cp "$EMBEDDED_GEM_ROOT/config/cloudkeeper.yml" "$CLOUDKEEPER_CONFIG_FILE" || error_exit "Cannot create $CLOUDKEEPER_CONFIG_FILE"
chown cloudkeeper:cloudkeeper "$CLOUDKEEPER_CONFIG_FILE" || error_exit "Cannot chown $CLOUDKEEPER_CONFIG_FILE to cloudkeeper:cloudkeeper"
chmod "$CLOUDKEEPER_CONFIG_FILE_MOD" "$CLOUDKEEPER_CONFIG_FILE" || error_exit "Cannot chmod $CLOUDKEEPER_CONFIG_FILE to $CLOUDKEEPER_CONFIG_FILE_MOD"

# symlink bin files into $BIN_DIR
ln -sf "$DEST_DIR/bin/cloudkeeper" "$BIN_DIR" || error_exit "Cannot link cloudkeeper to $BIN_DIR"

# systemd
if [ -d "$SYSD_DIR" ] && [ -d "$EMB_SYSD_DIR" ]; then
  for SD_FILE in ${EMB_SYSD_DIR}/* ; do
    if [ -f "$SD_FILE" ]; then
      cp "$SD_FILE" "${SYSD_DIR}/" || error_exit "Could not copy $SD_FILE into $SYSD_DIR"
    fi
  done
fi

# change configuration defaults
EMBEDDED_NGINX_BIN_ESCAPED=$(echo "$EMBEDDED_NGINX_BIN" | sed -e 's/[\/&]/\\&/g')
sed -i "s/\/usr\/bin\/nginx/$EMBEDDED_NGINX_BIN_ESCAPED/g" "$CLOUDKEEPER_CONFIG_FILE" || error_exit "Could not adapt $CLOUDKEEPER_CONFIG_FILE to local configuration"
sed -i "s/remote-mode: false/remote-mode: true/g" "$CLOUDKEEPER_CONFIG_FILE" || error_exit "Could not adapt $CLOUDKEEPER_CONFIG_FILE to local configuration"

echo "Thank you for installing cloudkeeper!"

exit 0
